{"version":3,"sources":["webpack://Mockachino/webpack/universalModuleDefinition","webpack://Mockachino/webpack/bootstrap","webpack://Mockachino/./lib/globals.ts","webpack://Mockachino/./lib/helpers.ts","webpack://Mockachino/./lib/mockachino.ts","webpack://Mockachino/./lib/utils.ts","webpack://Mockachino/./lib/validators.ts","webpack://Mockachino/./node_modules/@verdebydesign/randi/src/data.js","webpack://Mockachino/./node_modules/@verdebydesign/randi/src/randi.js","webpack://Mockachino/./node_modules/@verdebydesign/randi/src/randn.js"],"names":[],"mappings":"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","file":"mockachino.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Mockachino\"] = factory();\n\telse\n\t\troot[\"Mockachino\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/mockachino.ts\");\n","import { Options } from './types';\n\nexport const emailProviders: string[] = [\n\t'gmail.com',\n\t'hotmail.com',\n\t'outlook.com',\n\t'live.com'\n];\n\nexport const titles = {\n\tmenTitles: ['Mr.'],\n\twomenTitles: ['Miss', 'Mrs.', 'Ms.'],\n\tacademic: ['Dr.', 'Prof.'],\n\tsuffixTitle: ['Sr.', 'Jr.', '3rd', 'The 3rd']\n};\n\nexport const locales: Record<string, string> = {\n\tus: 'en-US'\n};\n\n/**\n * Fallback configurations for 'mock'\n */\nexport const defaultOptions: Options = {\n\tlocale: 'us',\n\tperson: {\n\t\tage: '20s',\n\t\theight: 'short',\n\t\tsex: 'man'\n\t}\n};\n\n/**\n * Default options for Picsum image url and blob creation\n */\nexport const PicsumDefault = {\n\tni: 1000, // number of images on Picsum\n\tw: 300,\n\to: {\n\t\text: 'jpg',\n\t\tgrayscale: false,\n\t\tblur: false,\n\t\twithInfo: true\n\t}\n};\n\n/**\n * fetch Web API request configurations\n */\nexport const fetchInit: RequestInit = {\n\tmethod: 'GET',\n\tcache: 'default'\n};\n\nexport const sexes = ['man', 'woman'];\nexport const ages = [\n\t'20s', '30s', '40s', 'young', 'old', 'youngAdult',\n\t'mid20s', 'mid40s', 'middleAged'\n];\nexport const heights = ['tall', 'short'];\n","import { randn } from './utils';\n\nimport {\n\tUsAddress,\n\tUsPhoneNumber,\n\tPersonOpts,\n\tPerson\n} from './types';\n\nimport {\n\ttitles,\n\temailProviders\n} from './globals';\n\nimport menNames from '../data/locale/us/menNames.json';\nimport womenNames from '../data/locale/us/womenNames.json';\nimport surnames from '../data/locale/us/surnames.json';\nimport states from '../data/locale/us/states.json';\nimport majorCities from '../data/locale/us/majorCities.json';\n\n/**\n * Builder a proper person object based on the sex\n * @param sex The person's sex\n * @ignore\n */\nfunction personBySex(sex: string): Record<string, string> {\n\tconst isWoman = sex === 'woman';\n\tconst isMan = sex === 'man';\n\tconst namesList = isMan ? menNames : isWoman ? womenNames : [];\n\tconst titlesBySex = isMan ? titles.menTitles : isWoman ? titles.womenTitles : [];\n\n\t// build\n\tconst name: string = namesList[randn(namesList.length)];\n\tconst middlename: string = namesList[randn(namesList.length)];\n\tconst middleInitial: string = middlename.charAt(0);\n\tconst lastname: string = surnames[randn(surnames.length)];\n\tconst eprovider: string = emailProviders[randn(emailProviders.length)];\n\tconst initials = `${name.charAt(0)}.${lastname.charAt(0)}`;\n\tconst email = `${name.toLowerCase()}.${lastname.toLowerCase()}@${eprovider}`;\n\tconst title = titlesBySex[randn(titlesBySex.length)];\n\tconst suffixTitle = titles.suffixTitle[randn(titles.suffixTitle.length)];\n\n\treturn {\n\t\tname,\n\t\tmiddlename,\n\t\tmiddleInitial,\n\t\tlastname,\n\t\tinitials,\n\t\temail,\n\t\ttitle,\n\t\tsuffixTitle\n\t};\n}\n\n/**\n * Generates a number that will represent age based on a seed value\n * @param age The seed used for the age value\n * @ignore\n */\nfunction personAge(age: string): number {\n\tswitch (age) {\n\tcase '20s': return randn(30, 20);\n\tcase '30s': return randn(40, 30);\n\tcase '40s': return randn(50, 40);\n\tcase 'young': return randn(18, 13);\n\tcase 'youngAdult': return randn(23, 18);\n\tcase 'mid20s': return randn(30, 25);\n\tcase 'mid40s': return randn(40, 35);\n\tcase 'middleAged': return randn(61, 40);\n\tcase 'old': return randn(100, 61);\n\tdefault: return randn(99, 13);\n\t}\n}\n\n/**\n * Build a US zipcod\n * @ignore\n */\nfunction usZipcode(): string {\n\tlet zipcode = '';\n\t// A US zip code is a 5 digits number consisting of digits from 0-9\n\tfor (let i = 0; i < 5; i++) zipcode += randn(9);\n\treturn zipcode;\n}\n\n// locale specific\n\n/**\n * Generates a height value in imperial units\n * @param h The seed used to build the height\n * @ignore\n */\nfunction usPersonHeight(h: string): string {\n\t// short: 4 - 5 ft\n\tconst [shortMinFt, shortMaxFt] = [4, 5];\n\t// short: 0 - 8 inches\n\tconst [, shortMaxIn] = [0, 8];\n\t// tall: 5 - 6 ft\n\tconst [tallMinFt, tallMaxFt] = [5, 6];\n\t// tall: 9 - 12 inches\n\tconst [tallMinIn, tallMaxIn] = [9, 11];\n\t// get random number for height in feets\n\tconst sFt: number = randn(shortMaxFt + 1, shortMinFt);\n\tconst tFt: number = randn(tallMaxFt + 1, tallMinFt);\n\n\t// build\n\tif (h === 'short' && sFt === shortMinFt) {\n\t\treturn `${sFt}.${randn(tallMaxIn + 1)}`;\n\t}\n\n\tif (h === 'short' && sFt === shortMaxFt) {\n\t\treturn `${sFt}.${randn(shortMaxIn + 1)}`;\n\t}\n\n\tif (h === 'tall' && tFt === tallMinFt) {\n\t\treturn `${tFt}.${randn(tallMaxIn + 1, tallMinIn)}`;\n\t}\n\n\tif (h === 'tall' && tFt === tallMaxFt) {\n\t\treturn `${tFt}.${randn(tallMaxIn + 1)}`;\n\t}\n\n\t// default\n\treturn `${tFt}.${randn(tallMaxIn + 1)}`;\n}\n\n/**\n * Build a US address\n * @ignore\n */\nexport function usAddress(): UsAddress {\n\t// select a random state\n\tlet si = randn(states.length);\n\tlet state = states[si];\n\n\t//usMajorCities are defines as 'city, state'\n\t//so we need to split the string first and than return the city\n\tlet cityIndex = randn(majorCities.length);\n\tlet city = majorCities[cityIndex].split(',')[0];\n\n\treturn {\n\t\tcity,\n\t\tstate: state.name,\n\t\tstateAbbrev: state.abbreviation,\n\t\tzipCode: usZipcode(),\n\t\tcountryAbbrev: 'U.S',\n\t\tcountry: 'United States of America'\n\t};\n}\n\n/**\n * Generates a US phone number\n * @see {@link https://bit.ly/2LvNuVn | US phone number format}\n * @returns A ten digit string representing a US phone number\n * @ignore\n */\nexport function usPhoneNumber(): UsPhoneNumber {\n\t//NPA-NXX-XXXX\n\t//NPA - Area code. PA goes from 0 - 9\n\t//NXX-XXXX - 7 digit subscriber number\n\t//N - code for the local central office, goes from 2 to 9\n\n\tlet areaCode = `${randn(10, 2)}${randn(9)}${randn(9)}`;\n\n\t//generate the rest of the 7 digit subscriber number\n\tlet subNumber = `${randn(10, 2)}`;\n\tfor (let i = 0; i < 6; i++) subNumber += i;\n\n\tlet number = {\n\t\tsubNumber,\n\t\tcountry: 'us',\n\t\tcountryCode: '+1',\n\t\tcityCode: areaCode,\n\t\tnumber: `${areaCode}${subNumber}`,\n\t\twithAreaCode: `+1${areaCode}${subNumber}`\n\t};\n\n\treturn number;\n}\n\n/**\n * Build a person obejct filled with data based on the 'us' locale\n * @param opts Config options\n * @ignore\n */\nexport function usPerson(opts: PersonOpts): Person {\n\tconst {\n\t\tname,\n\t\tmiddlename,\n\t\tmiddleInitial,\n\t\tlastname,\n\t\tinitials,\n\t\temail,\n\t\ttitle,\n\t\tsuffixTitle\n\t} = personBySex(opts.sex);\n\n\treturn {\n\t\tname,\n\t\tmiddlename,\n\t\tmiddleInitial,\n\t\tlastname,\n\t\tinitials,\n\t\temail,\n\t\ttitle,\n\t\tsuffixTitle,\n\t\tacademicTitle: titles.academic[randn(titles.academic.length)],\n\t\tsex: opts.sex,\n\t\tage: personAge(opts.age),\n\t\theight: usPersonHeight(opts.height),\n\t\tnationality: 'US'\n\t};\n}\n","/*!\n * Mockachino\n * Generate mock data for your apps. Take a sip and relax\n * (c) 2018 Verdexdesign\n*/\n\nimport { randn } from './utils';\nimport randi from '@verdebydesign/randi';\n\nimport {\n\tOptions,\n\tPerson,\n\tMocked,\n\tRandom,\n\tLorem,\n\tPicsumOptions,\n\tPicsumUrl,\n\tPicsumBlob,\n\tUsAddress,\n\tUsPhoneNumber\n} from './types';\n\nimport { validateOptions, validatePersonOpts } from './validators';\nimport {\n\tusPhoneNumber,\n\tusAddress,\n\tusPerson\n} from './helpers';\n\nimport {\n\tlocales,\n\tdefaultOptions,\n\tPicsumDefault,\n\tfetchInit\n} from './globals';\n\nimport forLorem from '../data/forLorem.json';\n\n// images\n\n/**\n * Fetches an image url from picsum with image metadata\n * @param w The with of the image to fetch\n * @param h The height of the image to fetch\n * @param o Options to build the image to fetch\n * @ignore\n */\nfunction buildPicsumUrl(w?: number, h?: number, o?: PicsumOptions): PicsumUrl {\n\tconst id = randn(PicsumDefault.ni); // The id of the image to fetch from picsum\n\tconst opts = o || PicsumDefault.o;\n\n\tlet url = `https://picsum.photos/id/${id}/${w}`;\n\th && (url += `/${h}`);\n\n\tif (opts) {\n\t\t// handle extension\n\t\topts.ext && opts.ext === 'jpeg' ? url += '.jpg' : url += `.${opts.ext}`;\n\n\t\t// handle grayscale\n\t\topts.grayscale && (url += '?grayscale');\n\n\t\t// handle blur\n\t\tswitch (true) {\n\t\tcase typeof opts.blur === 'number' && opts.blur >= 1 && opts.blur <= 10:\n\t\t\turl += opts.grayscale ? `&blur=${opts.blur}` : `?blur=${opts.blur}`;\n\t\t\tbreak;\n\t\tcase typeof opts.blur === 'boolean' && opts.blur === true:\n\t\t\turl += opts.grayscale ? '&blur' : '?blur';\n\t\t\tbreak;\n\t\tcase opts.blur && opts.blur < 1 || opts.blur && opts.blur > 10:\n\t\t\turl += opts.grayscale ? '&blur' : '?blur';\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn { data: url, info: `https://picsum.photos/id/${id}/info` };\n}\n\n/**\n * Fetches an image blob from picsum with image metadata\n * @see [Picsum](https://picsum.photos/)\n * @see [Using fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch)\n * @see [Using fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch)\n * @see [Blob Reader](https://developer.mozilla.org/en-US/docs/Web/API/Body/body)\n * @param w The with of the image to fetch\n * @param h The height of the image to fetch\n * @param o Options to build the image to fetch\n * @ignore\n */\nasync function fetchPicsum(w?: number, h?: number, o?: PicsumOptions): Promise<PicsumBlob> {\n\tconst opts = { ...o, ext: o && o.ext || 'jpg' };\n\tconst urls = buildPicsumUrl(w, h, opts);\n\tlet data = await fetch(urls.data, fetchInit);\n\n\t// read the body\n\tif (data.body) {\n\t\tconst reader = data.body.getReader();\n\n\t\tconst stream = await new ReadableStream({\n\t\t\t// eslint-disable-next-line\n\t\t\tstart(controller: any): Promise<void> {\n\t\t\t\tconst pump = (): Promise<void> => reader.read()\n\t\t\t\t\t.then(({ done, value }) => {\n\t\t\t\t\t\t// when no more data needs to be consumed, close the stream\n\t\t\t\t\t\tif (done) {\n\t\t\t\t\t\t\tcontroller.close();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// enqueue the next data chunk into our target stream\n\t\t\t\t\t\tcontroller.enqueue(value);\n\t\t\t\t\t\treturn pump();\n\t\t\t\t\t});\n\n\t\t\t\treturn pump();\n\t\t\t}\n\t\t});\n\n\t\tconst res = new Response(stream);\n\n\t\t// to return\n\t\tlet ret = { blob: await res.blob(), info: null };\n\t\t// if user wants metadata info\n\t\tif (o && o.withInfo) {\n\t\t\tlet info = await fetch(urls.info, fetchInit);\n\t\t\tret.info = await info.json();\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\treturn { blob: null, info: null };\n}\n\n// locale builders\n\n/**\n * Builds a phone number based on the locale\n * @param locale The locale the data is built for\n * @ignore\n */\nfunction buildPhoneNumber(locale: string): UsPhoneNumber {\n\tswitch (locale) {\n\tcase 'en-US': return usPhoneNumber();\n\tdefault: return usPhoneNumber();\n\t}\n}\n\n/**\n * Build an address based on the locale\n * @param locale The locale the data is built for\n * @ignore\n */\nfunction buildAddress(locale: string): UsAddress {\n\tswitch (locale) {\n\tcase 'en-US': return usAddress();\n\tdefault: return usAddress();\n\t}\n}\n\n/**\n * Builds a person object based on the locale\n * @param locale The locale the data is built for\n * @param opts Config options\n * @ignore\n */\nfunction buildPerson(locale: string, opts: Options): Person | undefined {\n\tif (validatePersonOpts(opts.person)) {\n\t\tswitch (locale) {\n\t\tcase 'en-US': return usPerson(opts.person);\n\t\t}\n\t}\n\n\treturn;\n}\n\n// interface\n\n/**\n * Generates random data representing a person, phone number, address and more.\n * @param options Config options\n * @example\n * let mocked = Mockachino.mock({\n *\t    locale: 'us',\n *\t    person: {\n *\t\t\tsex: 'man',\n *\t\t\theight: 'tall',\n *\t\t\tage: '20s'\n *\t\t}\n *\t});\n *\n * // ex: Object { person: {...}, phoneNumber: {...}, address: {...}, ... }\n */\nexport function mock(options?: Options): Mocked | undefined {\n\tconst definedOpts = validateOptions(defaultOptions, options);\n\tif (definedOpts && locales[definedOpts.locale]) {\n\t\tconst definedLocale = locales[definedOpts.locale];\n\n\t\treturn {\n\t\t\tperson: buildPerson(definedLocale, definedOpts),\n\t\t\tphoneNumber: buildPhoneNumber(definedLocale),\n\t\t\taddress: buildAddress(definedLocale)\n\t\t};\n\t}\n\n\treturn;\n}\n\n/**\n * Generates a random Picsum image url or blob\n * @param w The width of the image\n * @param h The height of the image\n * @param o Config options to build the\n * @example\n * const randomImage = Mockachino.random(300, 350, { grayscale: true, ext: 'webp'}).imageUrl;\n *\n * // ex: Object { data: \"https://picsum.photos/id/575/300/350.webp?grayscale\", info: \"https://picsum.photos/id/575/info\" }\n */\nexport function random(w?: number, h?: number, o?: PicsumOptions): Random;\n/**\n * Generates a random number based on a given range or just a max value\n * @param max The exclusive maximum value\n * @param min The incluse minimum value\n * @example\n * const randomNumber = Mockachino.random(200, 10);\n *\n * // ex: 87\n */\nexport function random(max?: number, min?: number): Random;\n/**\n * Generates a random placeholder title\n * @param separator String separator other than space\n * @example\n * const randomTitle = Mockachino.random('-');\n *\n * // ex: a-random-title\n */\nexport function random(separator?: string): Random;\n\n// eslint-disable-next-line\nexport function random(x?: any, y?: any, z?: any): Random {\n\treturn {\n\t\tnumber: randn(x || 101, y || 0),\n\t\ttitle: randi(typeof x === 'string' && x || ' '),\n\t\timageUrl: buildPicsumUrl(x || PicsumDefault.w, y, z),\n\t\timageBlob: fetchPicsum(x || PicsumDefault.w, y, z)\n\t};\n}\n\n/**\n * Generates lorem ipsum data\n * @param sep Line separator other than the new-line '\\n' char\n * @example\n * const loremData = Mockachino.lorem();\n *\n * // ex: Object { sentence: '...', paragraph: '...', text: '...' }\n */\nexport function lorem(sep?: string): Lorem {\n\tsep = sep || '\\n';\n\t// takes a param that defines the amount of sentences needed\n\tconst build = (length: number): string => {\n\t\tlet ret = '';\n\t\t// create paragraphs of 'number of sentences' length\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\t// select random sentences by round robyn\n\t\t\tret += `${forLorem[i % forLorem.length]}.${sep}`;\n\t\t}\n\t\treturn ret;\n\t};\n\n\treturn {\n\t\tsentence: forLorem[randn(forLorem.length)],\n\t\tparagraph: build(5),\n\t\ttext: build\n\t};\n}\n","/**\n * Generates random integers between min and max\n * @param {number} max An exclusive upper bound for the random number generated\n * @param {number} min An inclusive lower bound for the random number generated. 0 by default.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random | MDN: Math Random}\n * @returns A random number\n */\nexport function randn(max?: number, min?: number): number {\n\tmin = Math.ceil(Math.abs(min || 0));\n\tmax = Math.floor(Math.abs(max || 1));\n\treturn Math.floor(Math.random() * (max - min)) + min;\n}\n","import { Options, PersonOpts } from './types';\nimport {\n\tsexes,\n\theights,\n\tages\n} from './globals';\n\n// eslint-disable-next-line\nexport const isSet = (k: any): boolean => k !== undefined;\n\n/**\n * Validates the options object passed to mock\n * @param opts Config options\n * @ignore\n */\nexport function validateOptions(defaultOptions: Options, opts?: Options): Options | undefined {\n\t// in case Mockachino.mock(): no options at all\n\tif (!opts) {\n\t\treturn defaultOptions;\n\t}\n\n\t// validate keys\n\t// in case Mockachino.mock({}): empty object as the options\n\tif (!isSet(opts.locale) && !isSet(opts.person)) {\n\t\topts.person = defaultOptions.person;\n\t\topts.locale = defaultOptions.locale;\n\t\treturn opts;\n\t}\n\n\tif (isSet(opts.person) && !isSet(opts.locale)) {\n\t\topts.locale = defaultOptions.locale;\n\t\treturn opts;\n\t}\n\n\tif (isSet(opts.locale) && !isSet(opts.person)) {\n\t\topts.person = defaultOptions.person;\n\t\treturn opts;\n\t}\n\n\tif (isSet(opts)) {\n\t\treturn opts;\n\t}\n\n\treturn;\n}\n\n/**\n * Validates the options object passed to mock a person specifically\n * @param opts Person config options\n * @ignore\n */\nexport function validatePersonOpts(opts: PersonOpts): boolean {\n\tconst definedSex = isSet(opts.sex)\n\t\t&& sexes.indexOf(opts.sex) !== -1\n\t\t&& opts.sex;\n\n\tconst definedAge = isSet(opts.age)\n\t\t&& ages.indexOf(opts.age) !== -1\n\t\t&& opts.age;\n\n\tconst definedHeight = isSet(opts.height)\n\t\t&& heights.indexOf(opts.height) !== -1\n\t\t&& opts.height;\n\n\tif (definedSex && definedAge && definedHeight) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n","\nconst nouns = ['accelerator', 'accordion', 'account', 'accountant', 'acknowledgment', 'acoustic', 'acrylic', 'act', 'action', 'active',\n\t'activity', 'actor', 'actress', 'adapter', 'addition', 'address', 'adjustment', 'adult', 'advantage', 'advertisement',\n\t'advice', 'afghanistan', 'africa', 'aftermath', 'afternoon', 'aftershave', 'afterthought', 'age', 'agenda', 'agreement',\n\t'air', 'airbus', 'airmail', 'airplane', 'airport', 'airship', 'alarm', 'albatross', 'alcohol', 'algebra', 'algeria',\n\t'alibi', 'alley', 'alligator', 'alloy', 'almanac', 'alphabet', 'alto', 'aluminium', 'aluminum', 'ambulance', 'america',\n\t'amount', 'amusement', 'anatomy', 'anethesiologist', 'anger', 'angle', 'angora', 'animal', 'anime', 'ankle', 'answer',\n\t'ant', 'antarctica', 'anteater', 'antelope', 'anthony', 'anthropology', 'apartment', 'apology', 'apparatus', 'apparel',\n\t'appeal', 'appendix', 'apple', 'appliance', 'approval', 'april', 'aquarius', 'arch', 'archaeology', 'archeology',\n\t'archer', 'architecture', 'area', 'argentina', 'argument', 'aries', 'arithmetic', 'arm', 'armadillo', 'armchair',\n\t'armenian', 'army', 'arrow', 'art', 'ash', 'ashtray', 'asia', 'asparagus', 'asphalt', 'asterisk', 'astronomy', 'athlete',\n\t'atm', 'atom', 'attack', 'attempt', 'attention', 'attic', 'attraction', 'august', 'aunt', 'australia', 'australian', 'author',\n\t'authorisation', 'authority', 'authorization', 'avenue', 'babies', 'baboon', 'baby', 'back', 'backbone', 'bacon', 'badge', 'badger',\n\t'bag', 'bagel', 'bagpipe', 'bail', 'bait', 'baker', 'bakery', 'balance', 'balinese', 'ball', 'balloon', 'bamboo', 'banana', 'band',\n\t'bandana', 'bangladesh', 'bangle', 'banjo', 'bank', 'bankbook', 'banker', 'bar', 'barbara', 'barber', 'barge', 'baritone', 'barometer',\n\t'base', 'baseball', 'basement', 'basin', 'basket', 'basketball', 'bass', 'bassoon', 'bat', 'bath', 'bathroom', 'bathtub', 'battery',\n\t'battle', 'bay', 'beach', 'bead', 'beam', 'bean', 'bear', 'beard', 'beast', 'beat', 'beautician', 'beauty', 'beaver', 'bed', 'bedroom',\n\t'bee', 'beech', 'beef', 'beer', 'beet', 'beetle', 'beggar', 'beginner', 'begonia', 'behavior', 'belgian', 'belief', 'believe', 'bell',\n\t'belt', 'bench', 'bengal', 'beret', 'berry', 'bestseller', 'betty', 'bibliography', 'bicycle', 'bike', 'bill', 'billboard', 'biology',\n\t'biplane', 'birch', 'bird', 'birth', 'birthday', 'bit', 'bite', 'black', 'bladder', 'blade', 'blanket', 'blinker', 'blizzard', 'block',\n\t'blood', 'blouse', 'blow', 'blowgun', 'blue', 'board', 'boat', 'bobcat', 'body', 'bolt', 'bomb', 'bomber', 'bone', 'bongo', 'bonsai',\n\t'book', 'bookcase', 'booklet', 'boot', 'border', 'botany', 'bottle', 'bottom', 'boundary', 'bow', 'bowl', 'bowling', 'box', 'boy', 'bra',\n\t'brace', 'bracket', 'brain', 'brake', 'branch', 'brand', 'brandy', 'brass', 'brazil', 'bread', 'break', 'breakfast', 'breath', 'brian',\n\t'brick', 'bridge', 'british', 'broccoli', 'brochure', 'broker', 'bronze', 'brother', 'brother-in-law', 'brow', 'brown', 'brush', 'bubble',\n\t'bucket', 'budget', 'buffer', 'buffet', 'bugle', 'building', 'bulb', 'bull', 'bulldozer', 'bumper', 'bun', 'burglar', 'burma', 'burn',\n\t'burst', 'bus', 'bush', 'business', 'butane', 'butcher', 'butter', 'button', 'buzzard', 'c-clamp', 'cabbage', 'cabinet', 'cable', 'cactus',\n\t'cafe', 'cake', 'calculator', 'calculus', 'calendar', 'calf', 'call', 'camel', 'camera', 'camp', 'can', 'canada', 'canadian', 'cancer',\n\t'candle', 'cannon', 'canoe', 'canvas', 'cap', 'capital', 'cappelletti', 'capricorn', 'captain', 'caption', 'car', 'caravan', 'carbon',\n\t'card', 'cardboard', 'cardigan', 'care', 'carnation', 'carol', 'carp', 'carpenter', 'carriage', 'carrot', 'cart', 'cartoon', 'case',\n\t'cast', 'castanet', 'cat', 'catamaran', 'caterpillar', 'cathedral', 'catsup', 'cattle', 'cauliflower', 'cause', 'caution', 'cave', 'cd',\n\t'ceiling', 'celery', 'celeste', 'cell', 'cellar', 'cello', 'celsius', 'cement', 'cemetery', 'cent', 'centimeter', 'century', 'ceramic',\n\t'cereal', 'certification', 'chain', 'chair', 'chalk', 'chance', 'change', 'channel', 'character', 'chard', 'charles', 'chauffeur', 'check',\n\t'cheek', 'cheese', 'cheetah', 'chef', 'chemistry', 'cheque', 'cherries', 'cherry', 'chess', 'chest', 'chick', 'chicken', 'chicory',\n\t'chief', 'child', 'children', 'chill', 'chime', 'chimpanzee', 'chin', 'china', 'chinese', 'chive', 'chocolate', 'chord', 'christmas',\n\t'christopher', 'chronometer', 'church', 'cicada', 'cinema', 'circle', 'circulation', 'cirrus', 'citizenship', 'city', 'clam', 'clarinet',\n\t'class', 'claus', 'clave', 'clef', 'clerk', 'click', 'client', 'climb', 'clipper', 'cloakroom', 'clock', 'close', 'closet', 'cloth',\n\t'cloud', 'cloudy', 'clover', 'club', 'clutch', 'coach', 'coal', 'coast', 'coat', 'cobweb', 'cockroach', 'cocktail', 'cocoa', 'cod',\n\t'coffee', 'coil', 'coin', 'coke', 'cold', 'collar', 'college', 'collision', 'colombia', 'colon', 'colony', 'color', 'colt', 'column',\n\t'columnist', 'comb', 'comfort', 'comic', 'comma', 'command', 'commission', 'committee', 'community', 'company', 'comparison',\n\t'competition', 'competitor', 'composer', 'composition', 'computer', 'condition', 'condor', 'cone', 'confirmation', 'conga', 'congo',\n\t'conifer', 'connection', 'consonant', 'continent', 'control', 'cook', 'cooking', 'copper', 'copy', 'copyright', 'cord', 'cork',\n\t'cormorant', 'corn', 'cornet', 'correspondent', 'cost', 'cotton', 'couch', 'cougar', 'cough', 'country', 'course', 'court', 'cousin',\n\t'cover', 'cow', 'cowbell', 'crab', 'crack', 'cracker', 'craftsman', 'crate', 'crawdad', 'crayfish', 'crayon', 'cream', 'creator',\n\t'creature', 'credit', 'creditor', 'creek', 'crib', 'cricket', 'crime', 'criminal', 'crocodile', 'crocus', 'croissant', 'crook', 'crop',\n\t'cross', 'crow', 'crowd', 'crown', 'crush', 'cry', 'cub', 'cuban', 'cucumber', 'cultivator', 'cup', 'cupboard', 'cupcake', 'curler',\n\t'currency', 'current', 'curtain', 'curve', 'cushion', 'custard', 'customer', 'cut', 'cuticle', 'cycle', 'cyclone', 'cylinder', 'cymbal',\n\t'dad', 'daffodil', 'dahlia', 'daisy', 'damage', 'dance', 'dancer', 'danger', 'daniel', 'dash', 'dashboard', 'database', 'date', 'daughter',\n\t'david', 'day', 'dead', 'deadline', 'deal', 'death', 'deborah', 'debt', 'debtor', 'decade', 'december', 'decimal', 'decision', 'decrease',\n\t'dedication', 'deer', 'defense', 'deficit', 'degree', 'delete', 'delivery', 'den', 'denim', 'dentist', 'deodorant', 'department',\n\t'deposit', 'description', 'desert', 'design', 'desire', 'desk', 'dessert', 'destruction', 'detail', 'detective', 'development', 'dew',\n\t'diamond', 'diaphragm', 'dibble', 'dictionary', 'dietician', 'difference', 'digestion', 'digger', 'digital', 'dill', 'dime', 'dimple',\n\t'dinghy', 'dinner', 'dinosaur', 'diploma', 'dipstick', 'direction', 'dirt', 'disadvantage', 'discovery', 'discussion', 'disease',\n\t'disgust', 'dish', 'distance', 'distribution', 'distributor', 'diving', 'division', 'divorced', 'dock', 'doctor', 'dog', 'dogsled',\n\t'doll', 'dollar', 'dolphin', 'domain', 'donald', 'donkey', 'donna', 'door', 'dorothy', 'double', 'doubt', 'downtown', 'dragon',\n\t'dragonfly', 'drain', 'drake', 'drama', 'draw', 'drawbridge', 'drawer', 'dream', 'dredger', 'dress', 'dresser', 'dressing', 'drill',\n\t'drink', 'drive', 'driver', 'driving', 'drizzle', 'drop', 'drug', 'drum', 'dry', 'dryer', 'duck', 'duckling', 'dugout', 'dungeon',\n\t'dust', 'eagle', 'ear', 'earth', 'earthquake', 'ease', 'east', 'edge', 'edger', 'editor', 'editorial', 'education', 'edward', 'eel',\n\t'effect', 'egg', 'eggnog', 'eggplant', 'egypt', 'eight', 'elbow', 'element', 'elephant', 'elizabeth', 'ellipse', 'emery', 'employee',\n\t'employer', 'encyclopedia', 'end', 'enemy', 'energy', 'engine', 'engineer', 'engineering', 'english', 'enquiry', 'entrance',\n\t'environment', 'epoch', 'epoxy', 'equinox', 'equipment', 'era', 'error', 'estimate', 'ethernet', 'ethiopia', 'euphonium', 'europe',\n\t'evening', 'event', 'ex-husband', 'ex-wife', 'examination', 'example', 'exchange', 'exclamation', 'exhaust', 'existence', 'expansion',\n\t'experience', 'expert', 'explanation', 'eye', 'eyebrow', 'eyelash', 'eyeliner', 'face', 'facilities', 'fact', 'factory', 'fahrenheit',\n\t'fairies', 'fall', 'family', 'fan', 'fang', 'farm', 'farmer', 'fat', 'father', 'father-in-law', 'faucet', 'fear', 'feast', 'feather',\n\t'feature', 'february', 'fedelini', 'feedback', 'feeling', 'feet', 'felony', 'female', 'fender', 'ferry', 'ferryboat', 'fertilizer',\n\t'fiber', 'fiberglass', 'fibre', 'fiction', 'field', 'fifth', 'fight', 'fighter', 'file', 'find', 'fine', 'finger', 'fir', 'fire',\n\t'fired', 'fireman', 'fireplace', 'firewall', 'fish', 'fisherman', 'flag', 'flame', 'flare', 'flat', 'flavor', 'flax', 'flesh', 'flight',\n\t'flock', 'flood', 'floor', 'flower', 'flugelhorn', 'flute', 'fly', 'foam', 'fog', 'fold', 'font', 'food', 'foot', 'football', 'footnote',\n\t'force', 'forecast', 'forehead', 'forest', 'forgery', 'fork', 'form', 'format', 'fortnight', 'foundation', 'fountain', 'fowl', 'fox',\n\t'foxglove', 'fragrance', 'frame', 'france', 'freckle', 'freeze', 'freezer', 'freighter', 'french', 'freon', 'friction', 'friday',\n\t'fridge', 'friend', 'frog', 'front', 'frost', 'frown', 'fruit', 'fuel', 'fur', 'furniture', 'galley', 'gallon', 'game', 'gander',\n\t'garage', 'garden', 'garlic', 'gas', 'gasoline', 'gate', 'gateway', 'gauge', 'gazelle', 'gear', 'gearshift', 'geese', 'gemini', 'gender',\n\t'geography', 'geology', 'geometry', 'george', 'geranium', 'german', 'germany', 'ghana', 'ghost', 'giant', 'giraffe', 'girdle', 'girl',\n\t'gladiolus', 'glass', 'glider', 'gliding', 'glockenspiel', 'glove', 'glue', 'goal', 'goat', 'gold', 'goldfish', 'golf', 'gondola',\n\t'gong', 'good-bye', 'goose', 'gore-tex', 'gorilla', 'gosling', 'government', 'governor', 'grade', 'grain', 'gram', 'granddaughter',\n\t'grandfather', 'grandmother', 'grandson', 'grape', 'graphic', 'grass', 'grasshopper', 'gray', 'grease', 'great-grandfather',\n\t'great-grandmother', 'greece', 'greek', 'green', 'grenade', 'grey', 'grill', 'grip', 'ground', 'group', 'grouse', 'growth', 'guarantee',\n\t'guatemalan', 'guide', 'guilty', 'guitar', 'gum', 'gun', 'gym', 'gymnast', 'hacksaw', 'hail', 'hair', 'haircut', 'half-brother',\n\t'half-sister', 'halibut', 'hall', 'hallway', 'hamburger', 'hammer', 'hamster', 'hand', 'handball', 'handicap', 'handle', 'handsaw',\n\t'harbor', 'hardboard', 'hardcover', 'hardhat', 'hardware', 'harmonica', 'harmony', 'harp', 'hat', 'hate', 'hawk', 'head', 'headlight',\n\t'headline', 'health', 'hearing', 'heart', 'heat', 'heaven', 'hedge', 'height', 'helen', 'helicopter', 'helium', 'hell', 'helmet', 'help',\n\t'hemp', 'hen', 'heron', 'herring', 'hexagon', 'hill', 'himalayan', 'hip', 'hippopotamus', 'history', 'hobbies', 'hockey', 'hole',\n\t'holiday', 'home', 'honey', 'hood', 'hook', 'hope', 'horn', 'horse', 'hose', 'hospital', 'hot', 'hour', 'hourglass', 'house',\n\t'hovercraft', 'hub', 'hubcap', 'humidity', 'humor', 'hurricane', 'hyacinth', 'hydrant', 'hydrofoil', 'hydrogen', 'hyena', 'hygienic',\n\t'ice', 'icebreaker', 'icicle', 'icon', 'idea', 'ikebana', 'illegal', 'imprisonment', 'improvement', 'impulse', 'inch', 'income',\n\t'increase', 'index', 'india', 'indonesia', 'industry', 'ink', 'innocent', 'input', 'insect', 'instruction', 'instrument', 'insulation',\n\t'insurance', 'interactive', 'interest', 'internet', 'interviewer', 'intestine', 'invention', 'inventory', 'invoice', 'iran', 'iraq',\n\t'iris', 'iron', 'island', 'israel', 'italian', 'italy', 'jacket', 'jaguar', 'jail', 'jam', 'james', 'january', 'japan', 'japanese',\n\t'jar', 'jar-jar', 'jasmine', 'jason', 'jaw', 'jeans', 'jeep', 'jeff', 'jelly', 'jellyfish', 'jennifer', 'jet', 'jewel', 'jogging', 'john', 'join',\n\t'joke', 'joseph', 'journey', 'judge', 'judo', 'juice', 'july', 'jumbo', 'jump', 'jumper', 'june', 'jury', 'justice', 'jute', 'kale',\n\t'kamikaze', 'kangaroo', 'karate', 'karen', 'kayak', 'kendo', 'kenneth', 'kenya', 'ketchup', 'kettle', 'kettledrum', 'kevin', 'key',\n\t'keyboard', 'keyboarding', 'kick', 'kidney', 'kilogram', 'kilometer', 'kimberly', 'kiss', 'kitchen', 'kite', 'kitten', 'kitty', 'knee',\n\t'knickers', 'knife', 'knight', 'knot', 'knowledge', 'kohlrabi', 'korean', 'laborer', 'lace', 'ladybug', 'lake', 'lamb', 'lamp', 'lan',\n\t'land', 'landmine', 'language', 'larch', 'lasagna', 'latency', 'latex', 'lathe', 'laugh', 'laundry', 'laura', 'law', 'lawyer', 'layer',\n\t'lead', 'leaf', 'learning', 'leather', 'leek', 'leg', 'legal', 'lemonade', 'lentil', 'leo', 'leopard', 'letter', 'lettuce', 'level',\n\t'libra', 'library', 'license', 'lier', 'lift', 'light', 'lightning', 'lilac', 'lily', 'limit', 'linda', 'line', 'linen', 'link', 'lion',\n\t'lip', 'lipstick', 'liquid', 'liquor', 'lisa', 'list', 'literature', 'litter', 'liver', 'lizard', 'llama', 'loaf', 'loan', 'lobster',\n\t'lock', 'locket', 'locust', 'look', 'loss', 'lotion', 'love', 'low', 'lumber', 'lunch', 'lunchroom', 'lung', 'lunge', 'lute', 'luttuce',\n\t'lycra', 'lynx', 'lyocell', 'lyre', 'lyric', 'macaroni', 'machine', 'macrame', 'magazine', 'magic', 'magician', 'maid', 'mail',\n\t'mailbox', 'mailman', 'makeup', 'malaysia', 'male', 'mall', 'mallet', 'man', 'manager', 'mandolin', 'manicure', 'manx', 'map', 'maple',\n\t'maraca', 'marble', 'march', 'margaret', 'margin', 'maria', 'marimba', 'mark', 'market', 'married', 'mary', 'mascara', 'mask', 'mass',\n\t'match', 'math', 'mattock', 'may', 'mayonnaise', 'meal', 'measure', 'meat', 'mechanic', 'medicine', 'meeting', 'melody', 'memory',\n\t'men', 'menu', 'mercury', 'message', 'metal', 'meteorology', 'meter', 'methane', 'mexican', 'mexico', 'mice', 'michael', 'michelle',\n\t'microwave', 'middle', 'mile', 'milk', 'milkshake', 'millennium', 'millimeter', 'millisecond', 'mimosa', 'mind', 'mine', 'mini-skirt',\n\t'minibus', 'minister', 'mint', 'minute', 'mirror', 'missile', 'mist', 'mistake', 'mitten', 'moat', 'modem', 'mole', 'mom', 'monday',\n\t'money', 'monkey', 'month', 'moon', 'morning', 'morocco', 'mosque', 'mosquito', 'mother', 'mother-in-law', 'motion', 'motorboat',\n\t'motorcycle', 'mountain', 'mouse', 'moustache', 'mouth', 'move', 'multi-hop', 'multimedia', 'muscle', 'museum', 'music', 'musician',\n\t'mustard', 'myanmar', 'nail', 'name', 'nancy', 'napkin', 'narcissus', 'nation', 'neck', 'need', 'needle', 'neon', 'nepal', 'nephew',\n\t'nerve', 'nest', 'net', 'network', 'news', 'newsprint', 'newsstand', 'nic', 'nickel', 'niece', 'nigeria', 'night', 'nitrogen', 'node',\n\t'noise', 'noodle', 'north', 'north america', 'north korea', 'norwegian', 'nose', 'note', 'notebook', 'notify', 'novel', 'november',\n\t'number', 'numeric', 'nurse', 'nut', 'nylon', 'oak', 'oatmeal', 'objective', 'oboe', 'observation', 'occupation', 'ocean', 'ocelot',\n\t'octagon', 'octave', 'october', 'octopus', 'odometer', 'offence', 'offer', 'office', 'oil', 'okra', 'olive', 'onion', 'open', 'opera',\n\t'operation', 'ophthalmologist', 'opinion', 'option', 'orange', 'orchestra', 'orchid', 'order', 'organ', 'organisation', 'organization',\n\t'ornament', 'ostrich', 'otter', 'ounce', 'output', 'outrigger', 'oval', 'oven', 'overcoat', 'owl', 'owner', 'ox', 'oxygen', 'oyster',\n\t'package', 'packet', 'page', 'pail', 'pain', 'paint', 'pair', 'pajama', 'pakistan', 'palm', 'pamphlet', 'pan', 'pancake', 'pancreas',\n\t'panda', 'pansy', 'panther', 'panties', 'pantry', 'pants', 'panty', 'pantyhose', 'paper', 'paperback', 'parade', 'parallelogram',\n\t'parcel', 'parent', 'parentheses', 'park', 'parrot', 'parsnip', 'part', 'particle', 'partner', 'partridge', 'party', 'passbook',\n\t'passenger', 'passive', 'pasta', 'paste', 'pastor', 'pastry', 'patch', 'path', 'patient', 'patio', 'patricia', 'paul', 'payment',\n\t'pea', 'peace', 'peak', 'peanut', 'pear', 'pedestrian', 'pediatrician', 'peen', 'peer-to-peer', 'pelican', 'pen', 'penalty',\n\t'pencil', 'pendulum', 'pentagon', 'peony', 'pepper', 'perch', 'perfume', 'period', 'periodical', 'peripheral', 'permission',\n\t'persian', 'person', 'peru', 'pest', 'pet', 'pharmacist', 'pheasant', 'philippines', 'philosophy', 'phone', 'physician', 'piano',\n\t'piccolo', 'pickle', 'picture', 'pie', 'pig', 'pigeon', 'pike', 'pillow', 'pilot', 'pimple', 'pin', 'pine', 'ping', 'pink',\n\t'pint', 'pipe', 'pisces', 'pizza', 'place', 'plain', 'plane', 'planet', 'plant', 'plantation', 'plaster', 'plasterboard',\n\t'plastic', 'plate', 'platinum', 'play', 'playground', 'playroom', 'pleasure', 'plier', 'plot', 'plough', 'plow', 'plywood',\n\t'pocket', 'poet', 'point', 'poison', 'poland', 'police', 'policeman', 'polish', 'politician', 'pollution', 'polo', 'polyester',\n\t'pond', 'popcorn', 'poppy', 'population', 'porch', 'porcupine', 'port', 'porter', 'position', 'possibility', 'postage', 'postbox',\n\t'pot', 'potato', 'poultry', 'pound', 'powder', 'power', 'precipitation', 'preface', 'prepared', 'pressure', 'price', 'priest',\n\t'print', 'printer', 'prison', 'probation', 'process', 'processing', 'produce', 'product', 'production', 'professor', 'profit',\n\t'promotion', 'propane', 'property', 'prose', 'prosecution', 'protest', 'protocol', 'pruner', 'psychiatrist', 'psychology',\n\t'ptarmigan', 'puffin', 'pull', 'puma', 'pump', 'pumpkin', 'punch', 'punishment', 'puppy', 'purchase', 'purple', 'purpose',\n\t'push', 'pvc', 'pyjama', 'pyramid', 'quail', 'quality', 'quart', 'quarter', 'quartz', 'queen', 'question', 'quicksand',\n\t'quiet', 'quill', 'quilt', 'quince', 'quit', 'quiver', 'quotation', 'rabbi', 'rabbit', 'racing', 'radar', 'radiator',\n\t'radio', 'radish', 'raft', 'rail', 'railway', 'rain', 'rainbow', 'raincoat', 'rainstorm', 'rake', 'ramie', 'random',\n\t'range', 'rat', 'rate', 'raven', 'ravioli', 'ray', 'rayon', 'reaction', 'reading', 'reason', 'receipt', 'recess', 'record',\n\t'recorder', 'rectangle', 'red', 'reduction', 'refrigerator', 'refund', 'regret', 'reindeer', 'relation', 'relative',\n\t'religion', 'relish', 'reminder', 'repair', 'replace', 'report', 'representative', 'request', 'resolution', 'respect',\n\t'responsibility', 'rest', 'restaurant', 'result', 'retailer', 'revolve', 'revolver', 'reward', 'rhinoceros', 'rhythm',\n\t'rice', 'richard', 'riddle', 'rifle', 'ring', 'rise', 'risk', 'river', 'riverbed', 'road', 'roadway', 'roast', 'robert',\n\t'robin', 'rock', 'rocket', 'rod', 'roll', 'romania', 'romanian', 'ronald', 'roof', 'room', 'rooster', 'root', 'rose',\n\t'rotate', 'route', 'router', 'rowboat', 'rub', 'rubber', 'rugby', 'rule', 'run', 'russia', 'russian', 'rutabaga', 'ruth',\n\t'sack', 'sagittarius', 'sail', 'sailboat', 'sailor', 'salad', 'salary', 'sale', 'salesman', 'salmon', 'salt', 'sampan',\n\t'samurai', 'sand', 'sandra', 'sandwich', 'santa', 'sarah', 'sardine', 'satin', 'saturday', 'sauce', 'saudi arabia', 'sausage',\n\t'save', 'saw', 'saxophone', 'scale', 'scallion', 'scanner', 'scarecrow', 'scarf', 'scene', 'scent', 'schedule', 'school',\n\t'science', 'scissors', 'scooter', 'scorpio', 'scorpion', 'scraper', 'screen', 'screw', 'screwdriver', 'sea', 'seagull',\n\t'seal', 'seaplane', 'search', 'seashore', 'season', 'seat', 'second', 'secretary', 'secure', 'security', 'seed', 'seeder',\n\t'segment', 'select', 'selection', 'self', 'semicircle', 'semicolon', 'sense', 'sentence', 'separated', 'september', 'servant',\n\t'server', 'session', 'sex', 'shade', 'shadow', 'shake', 'shallot', 'shame', 'shampoo', 'shape', 'share', 'shark', 'sharon',\n\t'shears', 'sheep', 'sheet', 'shelf', 'shell', 'shield', 'shingle', 'ship', 'shirt', 'shock', 'shoe', 'shoemaker', 'shop',\n\t'shorts', 'shoulder', 'shovel', 'show', 'shrimp', 'shrine', 'siamese', 'siberian', 'side', 'sideboard', 'sidecar', 'sidewalk',\n\t'sign', 'signature', 'silica', 'silk', 'silver', 'sing', 'singer', 'single', 'sink', 'sister', 'sister-in-law', 'size', 'skate',\n\t'skiing', 'skill', 'skin', 'skirt', 'sky', 'slash', 'slave', 'sled', 'sleep', 'sleet', 'slice', 'slime', 'slip', 'slipper',\n\t'slope', 'smash', 'smell', 'smile', 'smoke', 'snail', 'snake', 'sneeze', 'snow', 'snowboarding', 'snowflake', 'snowman',\n\t'snowplow', 'snowstorm', 'soap', 'soccer', 'society', 'sociology', 'sock', 'soda', 'sofa', 'softball', 'softdrink', 'software',\n\t'soil', 'soldier', 'son', 'song', 'soprano', 'sort', 'sound', 'soup', 'sousaphone', 'south africa', 'south america', 'south korea',\n\t'soy', 'soybean', 'space', 'spade', 'spaghetti', 'spain', 'spandex', 'spark', 'sparrow', 'spear', 'specialist', 'speedboat',\n\t'sphere', 'sphynx', 'spider', 'spike', 'spinach', 'spleen', 'sponge', 'spoon', 'spot', 'spring', 'sprout', 'spruce', 'spy',\n\t'square', 'squash', 'squid', 'squirrel', 'stage', 'staircase', 'stamp', 'star', 'start', 'starter', 'state', 'statement',\n\t'station', 'statistic', 'steam', 'steel', 'stem', 'step', 'step-aunt', 'step-brother', 'step-daughter', 'step-father', 'step-grandfather',\n\t'step-grandmother', 'step-mother', 'step-sister', 'step-son', 'step-uncle', 'stepdaughter', 'stepmother', 'stepson', 'steven',\n\t'stew', 'stick', 'stinger', 'stitch', 'stock', 'stocking', 'stomach', 'stone', 'stool', 'stop', 'stopsign', 'stopwatch', 'store',\n\t'storm', 'story', 'stove', 'stranger', 'straw', 'stream', 'street', 'streetcar', 'stretch', 'string', 'structure', 'study', 'sturgeon',\n\t'submarine', 'substance', 'subway', 'success', 'sudan', 'suede', 'sugar', 'suggestion', 'suit', 'summer', 'sun', 'sunday', 'sundial',\n\t'sunflower', 'sunshine', 'supermarket', 'supply', 'support', 'surfboard', 'surgeon', 'surname', 'surprise', 'susan', 'sushi',\n\t'swallow', 'swamp', 'swan', 'sweater', 'sweatshirt', 'sweatshop', 'swedish', 'sweets', 'swim', 'swimming', 'swing', 'swiss',\n\t'switch', 'sword', 'swordfish', 'sycamore', 'syria', 'syrup', 'system', 't-shirt', 'table', 'tablecloth', 'tabletop', 'tachometer',\n\t'tadpole', 'tail', 'tailor', 'taiwan', 'talk', 'tank', 'tanker', 'tanzania', 'target', 'taste', 'taurus', 'tax', 'taxi', 'taxicab',\n\t'tea', 'teacher', 'teaching', 'team', 'technician', 'teeth', 'television', 'teller', 'temper', 'temperature', 'temple', 'tempo',\n\t'tendency', 'tennis', 'tenor', 'tent', 'territory', 'test', 'text', 'textbook', 'texture', 'thailand', 'theater', 'theory',\n\t'thermometer', 'thing', 'thistle', 'thomas', 'thought', 'thread', 'thrill', 'throat', 'throne', 'thumb', 'thunder', 'thunderstorm',\n\t'thursday', 'ticket', 'tie', 'tiger', 'tights', 'tile', 'timbale', 'time', 'timer', 'timpani', 'tin', 'tip', 'tire', 'titanium',\n\t'title', 'toad', 'toast', 'toe', 'toenail', 'toilet', 'tom-tom', 'tomato', 'ton', 'tongue', 'tooth', 'toothbrush', 'toothpaste',\n\t'top', 'tornado', 'tortellini', 'tortoise', 'touch', 'tower', 'town', 'toy', 'tractor', 'trade', 'traffic', 'trail', 'train', 'tramp',\n\t'transaction', 'transmission', 'transport', 'trapezoid', 'tray', 'treatment', 'tree', 'trial', 'triangle', 'trick', 'trigonometry',\n\t'trip', 'trombone', 'trouble', 'trousers', 'trout', 'trowel', 'truck', 'trumpet', 'trunk', 'tsunami', 'tub', 'tuba', 'tuesday', 'tugboat',\n\t'tulip', 'tuna', 'tune', 'turkey', 'turkish', 'turn', 'turnip', 'turnover', 'turret', 'turtle', 'tv', 'twig', 'twilight', 'twine',\n\t'twist', 'typhoon', 'tyvek', 'uganda', 'ukraine', 'ukrainian', 'umbrella', 'uncle', 'underclothes', 'underpants', 'undershirt',\n\t'underwear', 'unit', 'united kingdom', 'unshielded', 'use', 'utensil', 'uzbekistan', 'vacation', 'vacuum', 'valley', 'value', 'van',\n\t'vase', 'vault', 'vegetable', 'vegetarian', 'veil', 'vein', 'velvet', 'venezuela', 'venezuelan', 'verdict',\n\t'vermicelli', 'verse', 'vessel', 'vest', 'veterinarian', 'vibraphone', 'vietnam', 'view', 'vinyl', 'viola', 'violet', 'violin',\n\t'virgo', 'viscose', 'vise', 'vision', 'visitor', 'voice', 'volcano', 'volleyball', 'voyage', 'vulture', 'waiter', 'waitress',\n\t'walk', 'wall', 'wallaby', 'wallet', 'walrus', 'war', 'warm', 'wash', 'washer', 'wasp', 'waste', 'watch', 'watchmaker', 'water',\n\t'waterfall', 'wave', 'wax', 'way', 'wealth', 'weapon', 'weasel', 'weather', 'wedge', 'wednesday', 'weed', 'weeder', 'week',\n\t'weight', 'whale', 'wheel', 'whip', 'whiskey', 'whistle', 'white', 'wholesaler', 'whorl', 'wilderness', 'william', 'willow',\n\t'wind', 'windchime', 'window', 'windscreen', 'windshield', 'wine', 'wing', 'winter', 'wire', 'wish', 'witch', 'withdrawal',\n\t'witness', 'wolf', 'woman', 'women', 'wood', 'wool', 'woolen', 'word', 'work', 'workshop', 'worm', 'wound', 'wrecker', 'wren',\n\t'wrench', 'wrinkle', 'wrist', 'writer', 'xylophone', 'yacht', 'yak', 'yam', 'yard', 'yarn', 'year', 'yellow', 'yew', 'yogurt',\n\t'yoke', 'yugoslavian', 'zebra', 'zephyr', 'zinc', 'zipper', 'zone', 'zoo', 'zoology'];\n\nconst adjectives = ['aback', 'abaft', 'abandoned', 'abashed', 'aberrant', 'abhorrent', 'abiding', 'abject', 'ablaze', 'able', 'abnormal', 'aboard',\n\t'aboriginal', 'abortive', 'abounding', 'abrasive', 'abrupt', 'absent', 'absorbed', 'absorbing', 'abstracted', 'absurd', 'abundant', 'abusive',\n\t'acceptable', 'accessible', 'accidental', 'accurate', 'acid', 'acidic', 'acoustic', 'acrid', 'actually', 'ad', 'hoc', 'adamant', 'adaptable',\n\t'addicted', 'adhesive', 'adjoining', 'adorable', 'adventurous', 'afraid', 'aggressive', 'agonizing', 'agreeable', 'ahead', 'ajar', 'alcoholic',\n\t'alert', 'alike', 'alive', 'alleged', 'alluring', 'aloof', 'amazing', 'ambiguous', 'ambitious', 'amuck', 'amused', 'amusing', 'ancient', 'angry',\n\t'animated', 'annoyed', 'annoying', 'anxious', 'apathetic', 'aquatic', 'aromatic', 'arrogant', 'ashamed', 'aspiring', 'assorted', 'astonishing',\n\t'attractive', 'auspicious', 'automatic', 'available', 'average', 'awake', 'aware', 'awesome', 'awful', 'axiomatic', 'bad', 'barbarous', 'bashful',\n\t'bawdy', 'beautiful', 'befitting', 'belligerent', 'beneficial', 'bent', 'berserk', 'best', 'better', 'bewildered', 'big', 'billowy', 'bite-sized',\n\t'bitter', 'bizarre', 'black', 'black-and-white', 'bloody', 'blue', 'blue-eyed', 'blushing', 'boiling', 'boorish', 'bored', 'boring', 'bouncy',\n\t'boundless', 'brainy', 'brash', 'brave', 'brawny', 'breakable', 'breezy', 'brief', 'bright', 'bright', 'broad', 'broken', 'brown', 'bumpy', 'burly',\n\t'bustling', 'busy', 'cagey', 'calculating', 'callous', 'calm', 'capable', 'capricious', 'careful', 'careless', 'caring', 'cautious', 'ceaseless',\n\t'certain', 'changeable', 'charming', 'cheap', 'cheerful', 'chemical', 'chief', 'childlike', 'chilly', 'chivalrous', 'chubby', 'chunky', 'clammy',\n\t'classy', 'clean', 'clear', 'clever', 'cloistered', 'cloudy', 'closed', 'clumsy', 'cluttered', 'coherent', 'cold', 'colorful', 'colossal', 'combative',\n\t'comfortable', 'common', 'complete', 'complex', 'concerned', 'condemned', 'confused', 'conscious', 'cooing', 'cool', 'cooperative', 'coordinated',\n\t'courageous', 'cowardly', 'crabby', 'craven', 'crazy', 'creepy', 'crooked', 'crowded', 'cruel', 'cuddly', 'cultured', 'cumbersome', 'curious', 'curly',\n\t'curved', 'curvy', 'cut', 'cute', 'cute', 'cynical', 'daffy', 'daily', 'damaged', 'damaging', 'damp', 'dangerous', 'dapper', 'dark', 'dashing', 'dazzling',\n\t'dead', 'deadpan', 'deafening', 'dear', 'debonair', 'decisive', 'decorous', 'deep', 'deeply', 'defeated', 'defective', 'defiant', 'delicate',\n\t'delicious', 'delightful', 'demonic', 'delirious', 'dependent', 'depressed', 'deranged', 'descriptive', 'deserted', 'detailed', 'determined',\n\t'devilish', 'didactic', 'different', 'difficult', 'diligent', 'direful', 'dirty', 'disagreeable', 'disastrous', 'discreet', 'disgusted',\n\t'disgusting', 'disillusioned', 'dispensable', 'distinct', 'disturbed', 'divergent', 'dizzy', 'domineering', 'doubtful', 'drab', 'draconian',\n\t'dramatic', 'dreary', 'drunk', 'dry', 'dull', 'dusty', 'dynamic', 'dysfunctional', 'eager', 'early', 'earsplitting', 'earthy', 'easy', 'eatable',\n\t'economic', 'educated', 'efficacious', 'efficient', 'eight', 'elastic', 'elated', 'elderly', 'electric', 'elegant', 'elfin', 'elite',\n\t'embarrassed', 'eminent', 'empty', 'enchanted', 'enchanting', 'encouraging', 'endurable', 'energetic', 'enormous', 'entertaining',\n\t'enthusiastic', 'envious', 'equable', 'equal', 'erect', 'erratic', 'ethereal', 'evanescent', 'evasive', 'even excellent excited',\n\t'exciting exclusive', 'exotic', 'expensive', 'extra-large extra-small exuberant', 'exultant', 'fabulous', 'faded', 'faint fair',\n\t'faithful', 'fallacious', 'false familiar famous', 'fanatical', 'fancy', 'fantastic', 'far', ' far-flung', ' fascinated', 'fast',\n\t'fat faulty', 'fearful fearless', 'feeble feigned', 'female fertile', 'festive', 'few fierce', 'filthy', 'fine', 'finicky', 'first',\n\t'five', ' fixed', ' flagrant', 'flaky', 'flashy', 'flat', 'flawless', 'flimsy', ' flippant', 'flowery', 'fluffy', 'fluttering', 'foamy',\n\t'foolish', 'foregoing', 'forgetful', 'fortunate', 'four frail', 'fragile', 'frantic', 'free', ' freezing', ' frequent', ' fresh', ' fretful',\n\t'friendly', 'frightened frightening full fumbling functional', 'funny', 'furry furtive', 'future futuristic', 'fuzzy ', 'gabby', 'gainful',\n\t'gamy', 'gaping', 'garrulous', 'gaudy', 'general gentle', 'giant', 'giddy', 'gifted', 'gigantic', 'glamorous', 'gleaming', 'glib',\n\t'glistening glorious', 'glossy', 'godly', 'good', 'goofy', 'gorgeous', 'graceful', 'grandiose', 'grateful gratis', 'gray greasy great',\n\t'greedy', 'green grey grieving', 'groovy', 'grotesque', 'grouchy', 'grubby gruesome', 'grumpy', 'guarded', 'guiltless', 'gullible gusty', 'half',\n\t'hallowed', 'halting', 'handsome', 'handsomely', 'handy', 'hanging', 'hapless', 'happy', 'hard', 'hard-to-find', 'harmonious', 'harsh', 'hateful',\n\t'heady', 'healthy', 'heartbreaking', 'heavenly heavy hellish', 'helpful', 'helpless', 'hesitant', 'hideous high', 'highfalutin', 'high-pitched',\n\t'hilarious', 'hissing', 'historical', 'holistic', 'hollow', 'homeless', 'homely', 'honorable', 'horrible', 'hospitable', 'hot huge', 'hulking', 'humdrum',\n\t'humorous', 'hungry', 'hurried', 'hurt', 'hushed', 'husky', 'hypnotic', 'hysterical', 'icky', 'icy', 'idiotic', 'ignorant', 'ill', 'illegal', 'ill-fated',\n\t'ill-informed', 'illustrious', 'imaginary', 'immense', 'imminent', 'impartial', 'imperfect', 'impolite', 'important', 'imported', 'impossible', 'incandescent',\n\t'incompetent', 'inconclusive', 'industrious', 'incredible', 'inexpensive', 'infamous', 'innate', 'innocent', 'inquisitive', 'insidious', 'instinctive', 'intelligent',\n\t'interesting', 'internal', 'invincible', 'irate', 'irritating', 'itchy', 'jaded', 'jagged', 'jazzy', 'jealous', 'jittery', 'jobless', 'jolly', 'joyous', 'judicious',\n\t'juicy', 'jumbled', 'jumpy', 'juvenile', 'kaput', 'keen', 'kind', 'kindhearted', 'kindly', 'knotty', 'knowing', 'knowledgeable', 'known', 'labored', 'lackadaisical',\n\t'lacking', 'lame', 'lamentable', 'languid', 'large', 'last', 'late', 'laughable', 'lavish', 'lazy',\n\t'lean', 'learned', 'left', 'legal', 'lethal', 'level', 'lewd', 'light', 'like', 'likeable', 'limping', 'literate', 'little', 'lively',\n\t'lively', 'living', 'lonely', 'long', 'longing', 'long-term', 'loose', 'lopsided', 'loud', 'loutish', 'lovely', 'loving', 'low', 'lowly',\n\t'lucky', 'ludicrous', 'lumpy', 'lush', 'luxuriant', 'lying', 'lyrical', 'macabre', 'macho', 'maddening', 'madly', 'magenta', 'magical',\n\t'magnificent', 'majestic', 'makeshift', 'male', 'malicious', 'mammoth', 'maniacal', 'many', 'marked', 'massive', 'married', 'marvelous',\n\t'material', 'materialistic', 'mature', 'mean', 'measly', 'meaty', 'medical', 'meek', 'mellow', 'melodic', 'melted', 'merciful', 'mere',\n\t'messy', 'mighty', 'military', 'milky', 'mindless', 'miniature', 'minor', 'miscreant', 'misty', 'mixed', 'moaning', 'modern', 'moldy',\n\t'momentous', 'motionless', 'mountainous', 'muddled', 'mundane', 'murky', 'mushy', 'mute', 'mysterious', 'naive', 'nappy', 'narrow', 'nasty',\n\t'natural', 'naughty', 'nauseating', 'near', 'neat', 'nebulous', 'necessary', 'needless', 'needy', 'neighborly', 'nervous', 'new', 'next', 'nice',\n\t'nifty', 'nimble', 'nine', 'nippy', 'noiseless', 'noisy', 'nonchalant', 'nondescript', 'nonstop', 'normal', 'nostalgic', 'nosy', 'noxious', 'null',\n\t'numberless', 'numerous', 'nutritious', 'nutty', 'oafish', 'obedient', 'obeisant', 'obese', 'obnoxious', 'obscene', 'obsequious', 'observant',\n\t'obsolete', 'obtainable', 'oceanic', 'odd', 'offbeat', 'old', 'old-fashioned', 'omniscient', 'one', 'onerous', 'open', 'opposite', 'optimal',\n\t'orange', 'ordinary', 'organic', 'ossified', 'outgoing', 'outrageous', 'outstanding', 'oval', 'overconfident', 'overjoyed', 'overrated', 'overt',\n\t'overwrought', 'painful', 'painstaking', 'pale', 'paltry', 'panicky', 'panoramic', 'parallel', 'parched', 'parsimonious', 'past', 'pastoral',\n\t'pathetic', 'peaceful', 'penitent', 'perfect', 'periodic', 'permissible', 'perpetual', 'petite', 'petite', 'phobic', 'physical', 'picayune',\n\t'pink', 'piquant', 'placid', 'plain', 'plant', 'plastic', 'plausible', 'pleasant', 'plucky', 'pointless', 'poised', 'polite', 'political', 'poor',\n\t'possessive', 'possible', 'powerful', 'precious', 'premium', 'present', 'pretty', 'previous', 'pricey', 'prickly', 'private', 'probable',\n\t'productive', 'profuse', 'protective', 'proud', 'psychedelic', 'psychotic', 'public', 'puffy', 'pumped', 'puny', 'purple', 'purring', 'pushy',\n\t'puzzled', 'puzzling', 'quack', 'quaint', 'quarrelsome', 'questionable', 'quick', 'quickest', 'quiet', 'quirky', 'quixotic', 'quizzical', 'rabid',\n\t'racial', 'ragged', 'rainy', 'rambunctious', 'rampant', 'rapid', 'rare', 'raspy', 'ratty', 'ready', 'real', 'rebel', 'receptive', 'recondite', 'red',\n\t'redundant', 'reflective', 'regular', 'relieved', 'remarkable', 'reminiscent', 'repulsive', 'resolute', 'resonant', 'responsible', 'rhetorical',\n\t'rich', 'right', 'righteous', 'rightful', 'rigid', 'ripe', 'ritzy', 'roasted', 'robust', 'romantic', 'roomy', 'rotten', 'rough', 'round', 'royal',\n\t'ruddy', 'rude', 'rural', 'rustic', 'ruthless', 'sable', 'sad', 'safe', 'salty', 'same', 'sassy', 'satisfying', 'savory', 'scandalous', 'scarce',\n\t'scared', 'scary', 'scattered', 'scientific', 'scintillating', 'scrawny', 'screeching', 'second', 'second-hand', 'secret', 'secretive', 'sedate',\n\t'seemly', 'selective', 'selfish', 'separate', 'serious', 'shaggy', 'shaky', 'shallow', 'sharp', 'shiny', 'shivering', 'shocking', 'short', 'shrill',\n\t'shut', 'shy', 'sick', 'silent', 'silent', 'silky', 'silly', 'simple', 'simplistic', 'sincere', 'six', 'skillful', 'skinny', 'sleepy', 'slim', 'slimy',\n\t'slippery', 'sloppy', 'slow', 'small', 'smart', 'smelly', 'smiling', 'smoggy', 'smooth', 'sneaky', 'snobbish', 'snotty', 'soft', 'soggy',\n\t'solid', 'somber', 'sophisticated', 'sordid', 'sore', 'sore', 'sour', 'sparkling', 'special', 'spectacular', 'spicy', 'spiffy', 'spiky',\n\t'spiritual', 'spiteful', 'splendid', 'spooky', 'spotless', 'spotted', 'spotty', 'spurious', 'squalid', 'square', 'squealing', 'squeamish',\n\t'staking', 'stale', 'standing', 'statuesque', 'steadfast', 'steady', 'steep', 'stereotyped', 'sticky', 'stiff', 'stimulating', 'stingy',\n\t'stormy', 'straight', 'strange', 'striped', 'strong', 'stupendous', 'stupid', 'sturdy', 'subdued', 'subsequent', 'substantial', 'successful',\n\t'succinct', 'sudden', 'sulky', 'super', 'superb', 'superficial', 'supreme', 'swanky', 'sweet', 'sweltering', 'swift', 'symptomatic', 'synonymous',\n\t'taboo', 'tacit', 'tacky', 'talented', 'tall', 'tame', 'tan', 'tangible', 'tangy', 'tart', 'tasteful', 'tasteless', 'tasty', 'tawdry', 'tearful',\n\t'tedious', 'teeny', 'teeny-tiny', 'telling', 'temporary', 'ten', 'tender tense', 'tense', 'tenuous', 'terrible', 'terrific', 'tested', 'testy',\n\t'thankful', 'therapeutic', 'thick', 'thin', 'thinkable', 'third', 'thirsty', 'thoughtful', 'thoughtless', 'threatening', 'three', 'thundering',\n\t'tidy', 'tight', 'tightfisted', 'tiny', 'tired', 'tiresome', 'toothsome', 'torpid', 'tough', 'towering', 'tranquil', 'trashy', 'tremendous',\n\t'tricky', 'trite', 'troubled', 'truculent', 'true', 'truthful', 'two', 'typical', 'ubiquitous', 'ugliest', 'ugly', 'ultra', 'unable', 'unaccountable',\n\t'unadvised', 'unarmed', 'unbecoming', 'unbiased', 'uncovered', 'understood', 'undesirable', 'unequal', 'unequaled', 'uneven', 'unhealthy',\n\t'uninterested', 'unique', 'unkempt', 'unknown', 'unnatural', 'unruly', 'unsightly', 'unsuitable', 'untidy', 'unused', 'unusual', 'unwieldy',\n\t'unwritten', 'upbeat', 'uppity', 'upset', 'uptight', 'used', 'useful', 'useless', 'utopian', 'utter', 'uttermost', 'vacuous', 'vagabond', 'vague',\n\t'valuable', 'various', 'vast', 'vengeful', 'venomous', 'verdant', 'versed', 'victorious', 'vigorous', 'violent', 'violet', 'vivacious', 'voiceless',\n\t'volatile', 'voracious', 'vulgar', 'wacky', 'waggish', 'waiting', '', 'wakeful', 'wandering', 'wanting', 'warlike', 'warm', 'wary', 'wasteful', 'watery',\n\t'weak', 'wealthy', 'weary', 'well-groomed', 'well-made', 'well-off', 'well-to-do', 'wet', 'whimsical', 'whispering', 'white', 'whole', 'wholesale',\n\t'wicked', 'wide', 'wide-eyed', 'wiggly', 'wild', 'willing', 'windy', 'wiry', 'wise', 'wistful', 'witty', 'woebegone', 'womanly', 'wonderful', 'wooden',\n\t'woozy', 'workable', 'worried', 'worthless', 'wrathful', 'wretched', 'wrong', 'wry', 'xenophobic', 'yellow', 'yielding', 'young', 'youthful', 'yummy',\n\t'zany', 'zealous', 'zesty', 'zippy', 'zonked'];\n\nmodule.exports = { nouns, adjectives };\n","/*!\n * Random Names Generator\n * Data from https://gist.github.com/ijmacdowell/8325491 Erased original nouns index 2210 and other data\n * (c) 2019 Verdexdesign\n */\n\nconst randn = require('./randn.js');\nconst { nouns, adjectives } = require('./data.js');\n\n/**\n * Generates a name from random adjectives and nouns\n * @param {string} separator A character other than white-space to use as separator\n */\nfunction randi(separator = ' ') {\n\tlet randomAjective = adjectives[randn(0, adjectives.length)];\n\tlet randomNoun = nouns[randn(0, nouns.length)];\n\trandomAjective = randomAjective.trim().replace(/\\s/g, separator || ' ');\n\trandomNoun = randomNoun.trim().replace(/\\s/g, separator || ' ');\n\treturn randomAjective.concat(separator || ' ', randomNoun);\n}\n\nmodule.exports = randi;\n","/**\n * Generates random integers between min and max\n * @param {number} max An exclusive upper bound for the random number generated\n * @param {number} min An inclusive lower bound for the random number generated. 0 by default.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random | MDN: Math Random}\n * @returns A random number\n */\nfunction randn(max = 1, min = 0) {\n\tmin = Math.ceil(Math.abs(min));\n\tmax = Math.floor(Math.abs(max));\n\treturn Math.floor(Math.random() * (max - min)) + min;\n}\n\nmodule.exports = randn;"],"sourceRoot":""}