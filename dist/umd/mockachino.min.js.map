{"version":3,"sources":["webpack://Mockachino/webpack/universalModuleDefinition","webpack://Mockachino/webpack/bootstrap","webpack://Mockachino/./src/Mockachino.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","usStatesData","usMenNames","usWomenNames","usSurnames","usMajorCities","usIndustries","lorem","Mockachino","opts","arguments","length","undefined","_classCallCheck","this","person","locales","includes","locale","_setLocaleVars","getPerson","address","getAddress","phoneNumber","getPhoneNumber","number","job","getJob","text","getLorem","sentence","paragraph","states","menNames","womenNames","surnames","majorCities","industries","code","abbrev","pHeight","getRandomInt","height","tmp","pAge","age","zipcode","areaCode","subNumber","country","countryCode","cityCode","numberWithAreaCode","getUsPhoneNumber","randI","names","nameIndex","middleNameIndex","preTitleIndex","suffixTitleIndex","pSex","surnameIndex","emailProviders","titles","prefixTitle","suffixTitle","academic","sex","allNames","nameListIndex","middlename","middleInitial","charAt","lastname","initials","email","toLowerCase","academicTitle","_checkPersonAge","_checkPersonHeight","nationality","title","stateIndex","state","cityIndex","city","split","stateAbbrev","abbreviation","zipCode","getZipcode","countryAbbrev","industry","industryName","jobHours","jobType","hours","type","max","min","Math","ceil","floor","random","lorems","ret"],"mappings":"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","file":"mockachino.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Mockachino\"] = factory();\n\telse\n\t\troot[\"Mockachino\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// *********************************************************************\n// Mockachino - Generate mock data for your apps. Take a sip and relax\n// *********************************************************************\n\nconst usStatesData = require('./data/locale/us/us_states.json');\nconst usMenNames = require('./data/locale/us/us_names_men.json');\nconst usWomenNames = require('./data/locale/us/us_names_women.json');\nconst usSurnames = require('./data/locale/us/us_surnames.json');\nconst usMajorCities = require('./data/locale/us/us_major_cities.json');\nconst usIndustries = require('./data/locale/us/us_job_indutries.json');\nconst lorem = require('./data/text/lorem.json');\n\nclass Mockachino {\n    /**\n     * Mock all sorts of things\n     * @constructor\n     * @param {object} opts Options for the mocker\n     */\n    constructor(opts = {}) {\n        this.person = opts.person ? opts.person : {};\n        //define locales\n        this.locales = ['us'];\n        this.locales.includes(opts.locale) ? this._setLocaleVars(opts.locale) : this._setLocaleVars();\n    }\n\n    // **********************\n    // Main\n    // **********************\n\n    /**\n     * Returns all mocked objects.\n     * @returns An object of all the mocked items.\n     */\n    mock() {\n        return {\n            person: this.getPerson(),\n            address: this.getAddress(),\n            phoneNumber: this.getPhoneNumber().number,\n            job: this.getJob(),\n            text: Mockachino.getLorem().text,\n            sentence: Mockachino.getLorem().sentence,\n            paragraph: Mockachino.getLorem().paragraph\n        };\n    }\n\n    // **********************\n    // Config\n    // **********************\n\n    /**\n     * @ignore\n     * Set variables related to the current locale\n     * @param {string} locale The current locale, default 'us'\n     */\n    _setLocaleVars(locale = 'us') {\n        switch (locale) {\n        case 'us':\n            this.locale = {\n                states: usStatesData,\n                menNames: usMenNames,\n                womenNames: usWomenNames,\n                surnames: usSurnames,\n                majorCities: usMajorCities,\n                industries: usIndustries,\n                code: 1,\n                abbrev: 'US',\n                name: 'United States'\n            };\n            break;\n        }\n    }\n\n    // **********************\n    // Helpers\n    // **********************\n\n    /**\n     * Generates random integers between min and max\n     * @param {number} max An exclusive upper bound for the random number generated\n     * @param {number} min An inclusive lower bound for the random number generated. 0 by default.\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random | MDN: Math Random}\n     * @returns A random number\n     */\n    static getRandomInt(max, min = 0) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min)) + min;\n    }\n\n    /**\n     * @ignore\n     * generates the person's height by this.person.height\n     * @returns The person's height\n     */\n    _checkPersonHeight() {\n        //set the person's height 5.9 - 6.11 = tall; 4.0 - 5.8 = short\n        let pHeight = `${Mockachino.getRandomInt(7, 4)}.${Mockachino.getRandomInt(12)}`;\n        if(this.person.height && this.person.height === 'short') {\n            let tmp = Mockachino.getRandomInt(6, 4);\n            if(tmp === 4) {\n                pHeight = `${tmp}.${Mockachino.getRandomInt(12)}`;\n            } else if(tmp === 5) {\n                pHeight = `${tmp}.${Mockachino.getRandomInt(9)}`;\n            }\n        } else if(this.person.height && this.person.height === 'tall') {\n            let tmp = Mockachino.getRandomInt(7, 5);\n            if(tmp === 5) {\n                pHeight = `${tmp}.${Mockachino.getRandomInt(12, 9)}`;\n            } else if(tmp === 6) {\n                pHeight = `${tmp}.${Mockachino.getRandomInt(12)}`;\n            }\n        }\n        return pHeight;\n    }\n\n    /**\n     * @ignore\n     * generates the person's age by this.person.age\n     * @returns The person's age\n     */\n    _checkPersonAge() {\n        let pAge = Mockachino.getRandomInt(99, 13);\n        if(this.person.age) {\n            switch (this.person.age) {\n            case 'young': pAge = Mockachino.getRandomInt(41, 13); break;\n            case 'old': pAge = Mockachino.getRandomInt(100, 41); break;\n            case '20s': pAge = Mockachino.getRandomInt(30, 20); break;\n            case '30s': pAge = Mockachino.getRandomInt(40, 30); break;\n            default: pAge = Mockachino.getRandomInt(99, 13);\n            }\n        }\n        return pAge;\n    }\n\n    // **********************\n    // Getters\n    // **********************\n\n    /**\n     * Generates lorem ipsum data\n     * @returns An object of lorem data\n     */\n    static getLorem() {\n        //takes a param that defines the amount of sentences needed\n        let lorems = length => {\n            let ret = '';\n            //create paragraphs of length number of sentences\n            for(let i = 0; i < length; i++) {\n                //Select random sentences circularly\n                ret += `${lorem[i % lorem.length]}.\\n`;\n            }\n            return ret;\n        };\n\n        return {\n            sentence: lorem[Mockachino.getRandomInt(lorem.length)],\n            paragraph: lorems(5),\n            text: lorems\n        };\n    }\n\n    /**\n     * Mocks zip codes from anywhere depending on the locale\n     * @returns A string representing a zipcode\n     */\n    getZipcode() {\n        let zipcode = '';\n        if(this.locale) {\n            switch (this.locale.abbrev) {\n            case 'US':\n                //A US zip code is a 5 digits number consisting of digits from 0-9\n                for(let i = 0; i < 5; i++) zipcode += Mockachino.getRandomInt(9);\n                break;\n            }\n        }\n        return zipcode;\n    }\n\n    /**\n     * Generates a US phone number\n     * @see {@link https://bit.ly/2LvNuVn | US phone number format}\n     * @returns A ten digit string representing a phone number\n     */\n    getUsPhoneNumber() {\n        //NPA-NXX-XXXX\n        //NPA - Area code. PA goes from 0 - 9\n        //NXX-XXXX - 7 digit subscriber number\n        //N - code for the local central office, goes from 2 to 9\n\n        let areaCode = `${Mockachino.getRandomInt(10, 2)}${Mockachino.getRandomInt(9)}${Mockachino.getRandomInt(9)}`;\n        //generate the rest of the 7 digit subscriber number\n        let subNumber = `${Mockachino.getRandomInt(10, 2)}`;\n        for(let i = 0; i < 6; i++) subNumber += i;\n\n        let number = {\n            country: 'us',\n            countryCode: '+1',\n            cityCode: areaCode,\n            subNumber,\n            number: `${areaCode}${subNumber}`,\n            numberWithAreaCode: `+1${areaCode}${subNumber}`\n        };\n        return number;\n    }\n\n    /**\n     * Mocks a phone number from the locale\n     * @returns A string representing a phone number\n     */\n    getPhoneNumber() {\n        let number = {};\n        if(this.locale) {\n            switch (this.locale.abbrev) {\n            case 'US':\n                number = this.getUsPhoneNumber();\n                break;\n            }\n        }\n        return number;\n    }\n\n    /**\n     * Mocks a person\n     * @returns An object representing the person\n     */\n    getPerson() {\n        //randI for random index - much descriptive name, shorter lines\n        const randI = Mockachino.getRandomInt;\n        let names = [];\n        //the index of a random name in the names array\n        let nameIndex = 0;\n        let middleNameIndex = 0;\n        let preTitleIndex;\n        let suffixTitleIndex;\n        let pSex;\n\n        const surnames = this.locale.surnames;\n        let surnameIndex = randI(surnames.length);\n\n        const emailProviders = [\n            'gmail.com',\n            'hotmail.com',\n            'outlook.com',\n            'live.com'\n        ];\n\n        //set all sorts of titles\n        const titles = {\n            prefixTitle: ['Mr.', 'Mrs.', 'Ms.'],\n            suffixTitle: ['Sr.', 'Jr.', '3rd', 'The 3rd'],\n            academic: ['Dr.', 'Prof.']\n        };\n\n        if(this.person.sex === undefined || this.person.sex !== 'man' && this.person.sex !== 'woman') {\n            //create a composite names array\n            let allNames = [this.locale.menNames, this.locale.womenNames];\n            //grab either men or women names 0 or 1 respectively\n            let nameListIndex = randI(allNames.length);\n            //the names array randomly selected\n            names = allNames[nameListIndex];\n            nameIndex = randI(names.length);\n            middleNameIndex = randI(names.length);\n            //person's sex\n            if(nameListIndex === 0) {\n                preTitleIndex = 0;\n                suffixTitleIndex = randI(titles.suffixTitle.length);\n                pSex = 'man';\n            } else {\n                preTitleIndex = randI(titles.prefixTitle.length, 1);\n                pSex = 'woman';\n            }\n        } else if(this.person.sex && this.person.sex === 'man') {\n            nameIndex = randI(this.locale.menNames.length);\n            middleNameIndex = randI(this.locale.menNames.length);\n            names = this.locale.menNames;\n            preTitleIndex = 0;\n            suffixTitleIndex = randI(titles.suffixTitle.length);\n            pSex = 'man';\n        } else if(this.person.sex && this.person.sex === 'woman') {\n            nameIndex = randI(this.locale.womenNames.length);\n            middleNameIndex = randI(this.locale.womenNames.length);\n            names = this.locale.womenNames;\n            preTitleIndex = randI(titles.prefixTitle.length, 1);\n            pSex = 'woman';\n        }\n\n        let person = {\n            name: names[nameIndex],\n            middlename: names[middleNameIndex],\n            middleInitial: `${names[middleNameIndex].charAt(0)}.`,\n            lastname: surnames[surnameIndex],\n            initials: `${names[nameIndex].charAt(0)}.${surnames[surnameIndex].charAt(0)}`,\n            email: `${names[nameIndex].toLowerCase()}.${surnames[surnameIndex].toLowerCase()}@${emailProviders[randI(emailProviders.length)]}`,\n            academicTitle: titles.academic[randI(titles.academic.length)],\n            sex: pSex,\n            age: this._checkPersonAge(),\n            height: this._checkPersonHeight(),\n            nationality: this.locale.name\n        };\n\n        //if prefix and suffix titles are set add them to the person's object\n        if(preTitleIndex !== undefined) person.title = titles.prefixTitle[preTitleIndex];\n        if(suffixTitleIndex !== undefined) person.suffixTitle = titles.suffixTitle[suffixTitleIndex];\n\n        return person;\n    }\n\n    /**\n     * Mocks an address\n     * @returns An object representing a state\n     */\n    getAddress() {\n        //select a state randomly\n        let stateIndex = Mockachino.getRandomInt(this.locale.states.length);\n        let state = this.locale.states[stateIndex];\n\n        //usMajorCities are defines as 'city, state'\n        //so we need to split the string first and than return the city\n        let cityIndex = Mockachino.getRandomInt(this.locale.majorCities.length);\n        let city = this.locale.majorCities[cityIndex].split(',')[0];\n\n        return {\n            city,\n            state: state.name,\n            stateAbbrev: state.abbreviation,\n            zipCode: this.getZipcode(),\n            countryAbbrev: this.locale.abbrev,\n            country: this.locale.name\n        };\n    }\n\n    /**\n     * Mocks a job position\n     * @returns An object representing a job\n     */\n    getJob() {\n        //grab an industry\n        //industry is an array of industry fields\n        //curently the first field of the array is the industry name\n        let industry = this.locale.industries[Mockachino.getRandomInt(this.locale.industries.length)];\n        //get the industry name\n        let industryName = industry[0];\n        //get industry fields\n        let industryField = industry[Mockachino.getRandomInt(industry.length, 1)];\n\n        const jobHours = [\n            'Part-time',\n            'Full-time',\n            'Fixed',\n            'Flexible',\n            'Rotating'\n        ];\n\n        const jobType = [\n            'Remote',\n            'Freelance',\n            'Self-employed',\n            'Consulting'\n        ];\n\n        return {\n            name: industryField,\n            city: this.locale.majorCities[Mockachino.getRandomInt(this.locale.majorCities.length)].split(',')[0],\n            industry: industryName,\n            hours: jobHours[Mockachino.getRandomInt(jobHours.length)],\n            type: jobType[Mockachino.getRandomInt(jobType.length)]\n        };\n    }\n}\n\n//export as a commonJS module\nmodule.exports = Mockachino;\n"],"sourceRoot":""}